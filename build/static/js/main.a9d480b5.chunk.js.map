{"version":3,"sources":["components/Pagination.js","components/Home.js","components/Winner.js","components/App.js","index.js"],"names":["Pagination","playersPerPage","totalPlayers","paginate","handleNext","handlePrev","currentPage","pageNumbers","lastPage","Math","ceil","i","push","className","onClick","href","aria-label","aria-hidden","map","number","Home","props","useState","players","setPlayers","displayedPlayers","setDisplayedPlayers","selectedPlayers","setSelectedPlayers","buttonDisabled","setButtonDisabled","startClicked","setStartClicked","searchTerm","setSearchTerm","sortBet","setSortBet","sortPrice","setSortPrice","setCurrentPage","arrowUp","arrowDown","betArrow","setBetArrow","priceArrow","setPriceArrow","url","indexOfLastPost","indexOfFirstPost","paginatedPlayers","slice","handleAdd","event","name","target","Name","includes","prevValue","length","useEffect","location","state","playersFromWinner","axios","get","then","response","data","player","console","log","Price","catch","err","timeoutId","setTimeout","filter","toLocaleLowerCase","clearTimeout","handleRemove","handleSort","e","id","sort","a","b","Bet","to","pathname","style","height","backgroundColor","width","display","src","alt","index","disabled","type","placeholder","value","onChange","scope","cursor","pageNumber","Winner","dice","setDice","backClicked","setBackClicked","floor","random","parseInt","Status","renderedPlayers","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9d480b5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Pagination = ({ playersPerPage, totalPlayers, paginate, handleNext, handlePrev, currentPage }) => {\r\n    const pageNumbers = [];\r\n    const lastPage = Math.ceil(totalPlayers / playersPerPage)\r\n\r\n    for (let i = 1; i <= lastPage; i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination justify-content-center\">\r\n                <li className={`page-item ${currentPage === 1 ? 'disabled' : null}`}>\r\n                    <button onClick={handlePrev} className=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n                        <span aria-hidden=\"true\">&laquo;</span>\r\n                    </button>\r\n                </li>\r\n                {pageNumbers.map((number) => {\r\n                    return (\r\n                        <li key={number} className=\"page-item\">\r\n                            <button className=\"page-link\" onClick={() => paginate(number)}>{number}</button>\r\n                        </li>\r\n                    );\r\n                })}\r\n                <li className={`page-item ${currentPage === lastPage ? 'disabled' : null}`}>\r\n                    <button onClick={handleNext} className=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                        <span aria-hidden=\"true\">&raquo;</span>\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Pagination from './Pagination';\r\n\r\nfunction Home(props) {\r\n\r\n    const [players, setPlayers] = useState([]);\r\n    const [displayedPlayers, setDisplayedPlayers] = useState([]);\r\n    const [selectedPlayers, setSelectedPlayers] = useState([]);\r\n    const [buttonDisabled, setButtonDisabled] = useState(true);\r\n    const [startClicked, setStartClicked] = useState(false)\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [sortBet, setSortBet] = useState(null);\r\n    const [sortPrice, setSortPrice] = useState(null);\r\n\r\n    // For pagination\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [playersPerPage] = useState(7);\r\n\r\n    const arrowUp = \"fa fa-arrow-up\";\r\n    const arrowDown = \"fa fa-arrow-down\";\r\n\r\n    // Bet and Price sort icon\r\n    const [betArrow, setBetArrow] = useState(\"bi bi-arrow-down-up\");\r\n    const [priceArrow, setPriceArrow] = useState(\"bi bi-arrow-down-up\");\r\n\r\n    const url = 'https://s3-ap-southeast-1.amazonaws.com/he-public-data/bets7747a43.json';\r\n\r\n    const indexOfLastPost = currentPage * playersPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - playersPerPage;\r\n    const paginatedPlayers = displayedPlayers.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    useEffect(() => {\r\n        if (props.location.state) {\r\n            const playersFromWinner = props.location.state.selectedPlayers;\r\n            axios.get(url)\r\n                .then((response) => {\r\n                    setPlayers(response.data.map((player) => {\r\n                        for (var i = 0; i < playersFromWinner.length; i++) {\r\n                            if (player.Name === playersFromWinner[i].Name) {\r\n                                console.log(playersFromWinner[i].Price);\r\n                                player.Price = playersFromWinner[i].Price\r\n                                break\r\n                            }\r\n                        }\r\n                        return player;\r\n                    }))\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n        } else {\r\n            axios.get(url)\r\n                .then((response) => {\r\n                    setPlayers(response.data)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n        }\r\n    }, [props.location.state])\r\n\r\n    useEffect(() => {\r\n        if (selectedPlayers.length > 3 && selectedPlayers.length < 10) {\r\n            setButtonDisabled(false);\r\n        } else {\r\n            setButtonDisabled(true)\r\n        }\r\n    }, [selectedPlayers])\r\n\r\n    useEffect(() => {\r\n        setDisplayedPlayers(players);\r\n    }, [players])\r\n\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => {\r\n            if (searchTerm) {\r\n                setDisplayedPlayers(players.filter((player) => {\r\n                    return player.Name.toLocaleLowerCase().includes(searchTerm.toLocaleLowerCase());\r\n                }));\r\n            } else {\r\n                setDisplayedPlayers(players)\r\n            }\r\n            setCurrentPage(1);\r\n        }, 500)\r\n\r\n        return () => {\r\n            clearTimeout(timeoutId);\r\n        }\r\n    }, [searchTerm, players])\r\n\r\n    function handleAdd(event) {\r\n        const { name } = event.target;\r\n\r\n        for (let i = 0; i < displayedPlayers.length; i++) {\r\n            if (displayedPlayers[i].Name === name) {\r\n                if (!selectedPlayers.includes(displayedPlayers[i])) {\r\n                    setSelectedPlayers((prevValue) => {\r\n                        return [...prevValue, displayedPlayers[i]]\r\n                    })\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleRemove = (event) => {\r\n        const { name } = event.target;\r\n\r\n        setSelectedPlayers((prevValue) => {\r\n            return prevValue.filter((player) => {\r\n                return player.Name !== name;\r\n            })\r\n        })\r\n    }\r\n\r\n    function handleStart() {\r\n        setStartClicked(true);\r\n    }\r\n\r\n    const handleSort = (e) => {\r\n\r\n        const { id } = e.target;\r\n\r\n        setCurrentPage(1);\r\n\r\n        if (id === \"Bet\") {\r\n            if (sortBet) {\r\n                setSortBet(false);\r\n                setDisplayedPlayers(prevValue => prevValue.sort((a, b) => a.Bet - b.Bet))\r\n                setBetArrow(arrowDown);\r\n            } else {\r\n                setSortBet(true);\r\n                setDisplayedPlayers(prevValue => prevValue.sort((a, b) => b.Bet - a.Bet))\r\n                setBetArrow(arrowUp);\r\n            }\r\n            setPriceArrow(\"bi bi-arrow-down-up\")\r\n        } else {\r\n            if (sortPrice) {\r\n                setSortPrice(false);\r\n                setDisplayedPlayers(prevValue => prevValue.sort((a, b) => a.Price - b.Price))\r\n                setPriceArrow(arrowDown);\r\n            } else {\r\n                setSortPrice(true);\r\n                setDisplayedPlayers(prevValue => prevValue.sort((a, b) => b.Price - a.Price))\r\n                setPriceArrow(arrowUp);\r\n            }\r\n            setBetArrow(\"bi bi-arrow-down-up\")\r\n        }\r\n    }\r\n\r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    const handleNext = () => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    const handlePrev = () => {\r\n        setCurrentPage(currentPage - 1)\r\n    }\r\n\r\n\r\n    if (startClicked) {\r\n        return <Redirect to={{ pathname: '/winner', state: { selectedPlayers: selectedPlayers } }} />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\" style={{ height: \"100vh\" }}>\r\n                <div className=\"col-4\" style={{ backgroundColor: \"lightgray\" }}>\r\n                    <img style={{ height: \"100px\", width: \"100px\", display: \"block\" }} className=\"m-4 mx-auto\" src=\"https://cdn.iconscout.com/icon/premium/png-256-thumb/dice-266-799783.png\" alt=\"dice\" />\r\n                    <h3 className=\"text-dark m-3 justify-content-center\">Selected Players</h3>\r\n                    <div className=\"m-4\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    {selectedPlayers.map((player, index) => {\r\n                                        return <tr key={index}>\r\n                                            <td>{player.Name}</td>\r\n                                            <td><img src={player['Profile Image']} alt='Player Avatar' style={{ height: \"20px\", width: \"20px\" }} /></td>\r\n                                            <td>{player.Bet} <span className=\"text-warning\"><i className=\"fa fa-bullseye\" aria-hidden=\"true\"></i></span></td>\r\n                                            <td>{player.Price} <span className=\"text-warning\"><i className=\"fa fa-money\" aria-hidden=\"true\"></i></span></td>\r\n                                            <td><button className=\"btn btn-sm btn-secondary\" name={player.Name} onClick={handleRemove}>Remove</button></td>\r\n                                        </tr>\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <button onClick={handleStart} className=\"btn btn-block btn-dark\" disabled={buttonDisabled} >START</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-8\">\r\n                    <h3 className=\"text-dark m-3 justify-content-center\">Select 4 - 9 Players to Play</h3>\r\n\r\n                    <div className=\"form-group m-3\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            value={searchTerm}\r\n                            onChange={(e) => setSearchTerm(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"m-4\">\r\n                        <table className=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">SELECT</th>\r\n                                    <th scope=\"col\">PLAYER NAME</th>\r\n                                    <th scope=\"col\">AVATAR</th>\r\n                                    <th scope=\"col\">\r\n                                        <div\r\n                                            id=\"Bet\"\r\n                                            onClick={e => handleSort(e)}\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className={betArrow} ></i>\r\n                                            BET\r\n                                        </div>\r\n                                    </th>\r\n                                    <th scope=\"col\">\r\n                                    <div\r\n                                            id=\"Price\"\r\n                                            onClick={e => handleSort(e)}\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        >\r\n                                            <i className={priceArrow} ></i>\r\n                                            Price\r\n                                        </div>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {paginatedPlayers.map((player, index) => {\r\n                                    return <tr key={index}>\r\n                                        <td  ><button className=\"btn btn-secondary btn-sm\" name={player.Name} onClick={handleAdd}>Add</button></td>\r\n                                        <td>{player.Name}</td>\r\n                                        <td><img src={player['Profile Image']} alt='Player Avatar' style={{ height: \"30px\", width: \"30px\" }} /></td>\r\n                                        <td>{player.Bet} <span className=\"text-warning\"><i className=\"fa fa-bullseye\" aria-hidden=\"true\"></i></span></td>\r\n                                        <td>{player.Price} <span className=\"text-warning\"><i className=\"fa fa-money\" aria-hidden=\"true\"></i></span></td>\r\n                                    </tr>\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                        <Pagination\r\n                            playersPerPage={playersPerPage}\r\n                            totalPlayers={displayedPlayers.length}\r\n                            paginate={paginate}\r\n                            handleNext={handleNext}\r\n                            handlePrev={handlePrev}\r\n                            currentPage={currentPage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction Winner(props) {\r\n\r\n    const [dice, setDice] = useState(0);\r\n    const [backClicked, setBackClicked] = useState(false);\r\n    const [selectedPlayers, setSelectedPlayers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setDice(Math.floor(Math.random() * 9) + 1);\r\n    }, [props.location.state.selectedPlayers])\r\n\r\n    useEffect(() => {\r\n        if (dice) {\r\n            setSelectedPlayers(props.location.state.selectedPlayers.map((player) => {\r\n                if (parseInt(player.Bet) === dice) {\r\n                    player.Price = parseInt(player.Price) * 2;\r\n                    player.Status = \"WON\";\r\n                } else {\r\n                    player.Status = \"LOST\";\r\n                }\r\n\r\n                return player\r\n            }))\r\n        }\r\n    }, [dice, props.location.state.selectedPlayers])\r\n\r\n    function handleBack() {\r\n        setBackClicked(true);\r\n    }\r\n\r\n    const renderedPlayers = selectedPlayers.map((player, index) => {\r\n        return <tr key={index}>\r\n            <td>{player.Name}</td>\r\n            <td><img src={player['Profile Image']} alt='Player Avatar' style={{ height: \"30px\", width: \"30px\" }} /></td>\r\n            <td>{player.Bet} <span className=\"text-warning\"><i className=\"fa fa-bullseye\" aria-hidden=\"true\"></i></span></td>\r\n            <td>{player.Price} <span className=\"text-warning\"><i className=\"fa fa-money\" aria-hidden=\"true\"></i></span></td>\r\n            <td>{player.Status && player.Status}</td>\r\n        </tr>\r\n    })\r\n\r\n    if (backClicked) {\r\n        return <Redirect to={{ pathname: '/home', state: { selectedPlayers: selectedPlayers } }} />\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\" >\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-10 offset-1\">\r\n                    <div>\r\n                        <div className=\"d-flex justify-content-center display-4\">Opposing Bet: {dice}</div>\r\n                        <div className=\"m-4\">\r\n                            <table className=\"table table-striped\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">PLAYER NAME</th>\r\n                                        <th scope=\"col\">AVATAR</th>\r\n                                        <th scope=\"col\">BET</th>\r\n                                        <th scope=\"col\">PRICE</th>\r\n                                        <th scope=\"col\">STATUS</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {renderedPlayers}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <button onClick={handleBack} className=\"btn btn-block btn-dark\">BACK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Winner;","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\nimport Winner from './Winner';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path='/home' component={Home} />\r\n        <Route exact path='/winner' component={Winner} />\r\n        <Route path='/' component={Home} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport {HashRouter} from \"react-router-dom\"\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}